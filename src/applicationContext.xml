<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans          
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         
						http://www.springframework.org/schema/mvc          
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd         
						http://www.springframework.org/schema/context          
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       
						http://www.springframework.org/schema/aop       
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">

	<!-- 自动扫描com包下所有的类，如果有注解形式的@service @Controller则初始化bean -->
	<context:component-scan base-package="com"></context:component-scan>
	<context:annotation-config></context:annotation-config>

	<!-- 加载datasource.properties中的内容，datasource.properties文件中的key命名要有一定的特殊规则 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:datasource.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置DataSource数据源，dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>
	
	<!-- Spring iBatis SqlMapClient -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sqlMapConfig.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- spring事务启动 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置事务特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="edit*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
    		<property name="dataSource" ref="dataSource"/>     
    </bean>

	
	<!-- 配置哪些类的方法需要事务 -->
	<aop:config>
		<aop:pointcut id="baseServiceMethods" expression="execution(* com.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods" />
	</aop:config>
	<!-- 强制使用CGLIB代理 -->
	<aop:aspectj-autoproxy />
	
	<bean id="employeesService" class="com.service.imp.EmployeesServiceImp">
		<property name="employeesDao" ref="employeesDao"></property>
	</bean>
	<bean id="employeesDao" class="com.dao.imp.EmployeesDaoImp">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>
	
	<mvc:default-servlet-handler/>

</beans>